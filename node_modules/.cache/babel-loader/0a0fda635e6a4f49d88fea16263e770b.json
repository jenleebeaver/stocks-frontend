{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/stocks-app/stocks-frontend/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals'; //compose combines middleWares and store enhancers\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport portfolioReducer from './reducers/portfolioReducer'; // import stockReducer from './reducers/stockReducer';\n//where redux lives \n//enable Redux DevTools Extension \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; //storing global data, sending action object -> reducers decide what to update -> return new store\n\nlet store = createStore(portfolioReducer, storeEnhancers(applyMiddleware(thunk))); //\n\nReactDOM.render(\n/*#__PURE__*/\n//strict mode highlights potential problems in application \n_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 23,\n  columnNumber: 3\n}, this), document.getElementById('root')); //action -> reducer -> store\n// dispatch(actionObject)\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); //package.json has all of our react version info","map":{"version":3,"sources":["/Users/johndoe/stocks-app/stocks-frontend/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","createStore","applyMiddleware","compose","thunk","Provider","portfolioReducer","storeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B,C,CACA;;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B,C,CACA;AACA;AAEA;;;AACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,oCAAP,IAA+CN,OAAtE,C,CACA;;AACA,IAAIO,KAAK,GAAGT,WAAW,CAACK,gBAAD,EAAmBC,cAAc,CAACL,eAAe,CAACE,KAAD,CAAhB,CAAjC,CAAvB,C,CAEA;;AAEAN,QAAQ,CAACa,MAAT;AAAA;AACE;AACA,QAAC,KAAD,CAAO,UAAP;AAAA,yBAEE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAED,KAAjB;AAAA,2BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,QAFF,EAQEE,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF,E,CAWA;AACA;AAEA;AACA;AACA;;AACAb,eAAe,G,CAEf","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n//compose combines middleWares and store enhancers\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport portfolioReducer from './reducers/portfolioReducer';\n// import stockReducer from './reducers/stockReducer';\n//where redux lives \n\n//enable Redux DevTools Extension \nconst storeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n//storing global data, sending action object -> reducers decide what to update -> return new store\nlet store = createStore(portfolioReducer, storeEnhancers(applyMiddleware(thunk)))\n\n//\n\nReactDOM.render(\n  //strict mode highlights potential problems in application \n  <React.StrictMode>\n    {/* Provider component makes Redux store available to any nested components that need access to the Redux store. Here we are providing store as a prop.  */}\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//action -> reducer -> store\n// dispatch(actionObject)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//package.json has all of our react version info\n"]},"metadata":{},"sourceType":"module"}