{"ast":null,"code":"//!check out some learn lessons examples\nexport function fetchPortfolios(action) {\n  console.log('inside fetch portfolios.');\n  return dispatch => {\n    return fetch('http://localhost:3000/api/v1/portfolios', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }) //promise - response from request\n    //return => arg\n    .then(response => response.json()).then(res => {\n      console.log(res);\n      return res;\n    }).then(portfolios => //update redux store\n    //dispatch action object with a type and payload -> reducer -> updates redux store\n    dispatch({\n      type: 'FETCH_PORTFOLIOS',\n      payload: portfolios\n    }));\n  };\n} //dispatching action object. action -> reducer which returns new version of state based on action \n// dispatch(action)","map":{"version":3,"sources":["/Users/johndoe/stocks-app/stocks-frontend/src/actions/fetchPortfolios.js"],"names":["fetchPortfolios","action","console","log","dispatch","fetch","method","headers","then","response","json","res","portfolios","type","payload"],"mappings":"AACA;AACA,OAAO,SAASA,eAAT,CAAyBC,MAAzB,EAAgC;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACA,SAAQC,QAAD,IAAc;AACnB,WAAOC,KAAK,CAAC,yCAAD,EAA4C;AACxDC,MAAAA,MAAM,EAAE,KADgD;AAExDC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAF+C,KAA5C,CAAL,CAOL;AACA;AARK,KASJC,IATI,CASCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EATb,EAUJF,IAVI,CAUCG,GAAG,IAAI;AACTT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAZ;AACA,aAAOA,GAAP;AACH,KAbI,EAcJH,IAdI,CAcCI,UAAU,IAChB;AACA;AAEAR,IAAAA,QAAQ,CAAC;AACLS,MAAAA,IAAI,EAAE,kBADD;AAELC,MAAAA,OAAO,EAAEF;AAFJ,KAAD,CAlBH,CAAP;AAsBD,GAvBD;AAwBH,C,CAED;AACA","sourcesContent":["\n//!check out some learn lessons examples\nexport function fetchPortfolios(action){\n    console.log('inside fetch portfolios.')\n    return (dispatch) => {\n      return fetch('http://localhost:3000/api/v1/portfolios', {\n      method: 'GET',\n      headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n      }  \n        })\n        //promise - response from request\n        //return => arg\n        .then(response => response.json())\n        .then(res => {\n            console.log(res);\n            return res;\n        })\n        .then(portfolios => \n        //update redux store\n        //dispatch action object with a type and payload -> reducer -> updates redux store\n        \n        dispatch({\n            type: 'FETCH_PORTFOLIOS',\n            payload: portfolios\n        }))\n    }\n}\n\n//dispatching action object. action -> reducer which returns new version of state based on action \n// dispatch(action)"]},"metadata":{},"sourceType":"module"}