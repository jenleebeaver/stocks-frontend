{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/stocks-app/stocks-frontend/src/containers/PortfoliosContainer.js\";\nimport React, { Component } from 'react';\nimport Portfolios from '../components/Portfolios';\nimport PortfolioInput from '../components/PortfolioInput';\nimport { connect } from 'react-redux';\nimport { fetchPortfolios } from '../actions/fetchPortfolios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PortfoliosContainer extends Component {\n  //use props to connect to redux store. accesses fetchPortfolios which has fetch request to backend.  \n  componentDidMount() {\n    this.props.fetchPortfolios();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(PortfolioInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Portfolios, {\n        portfolios: this.props.portfolios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n} //sending data to store by getting access to props through state \n\n\nconst mapStateToProps = state => {\n  return {\n    portfolios: state.portfolios\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPortfolios\n})(PortfoliosContainer); //render class container component in app.js","map":{"version":3,"sources":["/Users/johndoe/stocks-app/stocks-frontend/src/containers/PortfoliosContainer.js"],"names":["React","Component","Portfolios","PortfolioInput","connect","fetchPortfolios","PortfoliosContainer","componentDidMount","props","render","portfolios","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;;;AAEA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAExC;AACAM,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWH,eAAX;AACH;;AAEDI,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWE;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAduC,C,CAiB5C;;;AACA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHF,IAAAA,UAAU,EAAEE,KAAK,CAACF;AADf,GAAP;AAGH,CAJD;;AAMA,eAAeN,OAAO,CAACO,eAAD,EAAkB;AAACN,EAAAA;AAAD,CAAlB,CAAP,CAA4CC,mBAA5C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport Portfolios from '../components/Portfolios';\nimport PortfolioInput from '../components/PortfolioInput';\nimport {connect} from 'react-redux';\nimport {fetchPortfolios} from '../actions/fetchPortfolios';\n\nclass PortfoliosContainer extends Component {\n\n    //use props to connect to redux store. accesses fetchPortfolios which has fetch request to backend.  \n    componentDidMount(){\n        this.props.fetchPortfolios()\n    }\n\n    render() {\n        return (\n            <div>\n                <PortfolioInput /> \n                <Portfolios portfolios={this.props.portfolios}/>\n            </div>\n        )\n    }\n}\n\n//sending data to store by getting access to props through state \nconst mapStateToProps = state => {\n    return {\n        portfolios: state.portfolios\n    }\n}\n\nexport default connect(mapStateToProps, {fetchPortfolios})(PortfoliosContainer)\n//render class container component in app.js"]},"metadata":{},"sourceType":"module"}