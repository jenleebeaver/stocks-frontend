{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/stocks-app/stocks-frontend/src/containers/PortfolioIndexContainer.js\";\nimport React, { Component } from 'react';\nimport Portfolios from '../components/Portfolios'; // import PortfolioInput from '../components/PortfolioInput';\n\nimport { connect } from 'react-redux';\nimport { fetchPortfolios } from '../actions/fetchPortfolios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PortfoliosContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      portfolios: [],\n      loading: true\n    };\n  }\n\n  //use props to connect to redux store. accesses fetchPortfolios which has fetch request to backend.  \n  componentDidMount() {\n    console.log(this.props);\n    setTimeout(() => {\n      this.setState({\n        portfolios: [{\n          portfolio_name: \"Test Portfolio_name\"\n        } // this.props.fetchPortfolios()\n        ],\n        loading: false\n      });\n    }, 1000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-6xl mx-auto mt-16\",\n      children: this.state.loading ? 'loading spinner' : /*#__PURE__*/_jsxDEV(Portfolios, {\n        portfolios: this.state.portfolios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this) // <div>\n    //     {/* <PortfolioInput /> \n    //     <Portfolios portfolios={this.props.portfolios}/> */}\n    // </div>\n    ;\n  }\n\n} //sending data to store by getting access to props through state \n\n\nconst mapStateToProps = state => {\n  return {\n    portfolios: state.portfolios\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPortfolios\n})(PortfoliosContainer); //render class container component in app.js","map":{"version":3,"sources":["/Users/johndoe/stocks-app/stocks-frontend/src/containers/PortfolioIndexContainer.js"],"names":["React","Component","Portfolios","connect","fetchPortfolios","PortfoliosContainer","state","portfolios","loading","componentDidMount","console","log","props","setTimeout","setState","portfolio_name","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;;;AAEA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCK,KADwC,GAChC;AACJC,MAAAA,UAAU,EAAE,EADR;AAEJC,MAAAA,OAAO,EAAE;AAFL,KADgC;AAAA;;AAMxC;AACAC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACAC,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKC,QAAL,CAAc;AACVP,QAAAA,UAAU,EAAE,CACR;AAACQ,UAAAA,cAAc,EAAE;AAAjB,SADQ,CAER;AAFQ,SADF;AAKVP,QAAAA,OAAO,EAAE;AALC,OAAd;AAOH,KARS,EAQP,IARO,CAAV;AASC;;AAELQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAC,yBAAnB;AAAA,gBACK,KAAKV,KAAL,CAAWE,OAAX,GACG,iBADH,gBAEG,QAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKF,KAAL,CAAWC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ,CAMI;AACA;AACA;AACA;AATJ;AAWH;;AAhCuC,C,CAmC5C;;;AACA,MAAMU,eAAe,GAAGX,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADf,GAAP;AAGH,CAJD;;AAMA,eAAeJ,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA4CC,mBAA5C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport Portfolios from '../components/Portfolios';\n// import PortfolioInput from '../components/PortfolioInput';\nimport {connect} from 'react-redux';\nimport {fetchPortfolios} from '../actions/fetchPortfolios';\n\nclass PortfoliosContainer extends Component {\n    state = {\n        portfolios: [],\n        loading: true,\n    }\n\n    //use props to connect to redux store. accesses fetchPortfolios which has fetch request to backend.  \n    componentDidMount() {\n        console.log(this.props)\n        setTimeout(() => {\n            this.setState({\n                portfolios: [\n                    {portfolio_name: \"Test Portfolio_name\"}\n                    // this.props.fetchPortfolios()\n                ],\n                loading: false,\n            })\n        }, 1000)\n        }   \n\n    render() {\n        return (\n            <section className=\"max-w-6xl mx-auto mt-16\">\n                {this.state.loading\n                ? ( 'loading spinner' )\n                : ( <Portfolios portfolios={this.state.portfolios} /> )}\n            </section>\n            // <div>\n            //     {/* <PortfolioInput /> \n            //     <Portfolios portfolios={this.props.portfolios}/> */}\n            // </div>\n        )\n    }\n}\n\n//sending data to store by getting access to props through state \nconst mapStateToProps = state => {\n    return {\n        portfolios: state.portfolios\n    }\n}\n\nexport default connect(mapStateToProps, {fetchPortfolios})(PortfoliosContainer)\n//render class container component in app.js"]},"metadata":{},"sourceType":"module"}