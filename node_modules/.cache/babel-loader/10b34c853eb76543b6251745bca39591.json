{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/stocks-app/stocks-frontend/src/containers/PortfolioIndexContainer.js\";\nimport React, { Component } from 'react';\nimport Portfolios from '../components/Portfolios'; // import PortfolioInput from '../components/PortfolioInput';\n\nimport { connect } from 'react-redux';\nimport { fetchPortfolios } from '../actions/fetchPortfolios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass PortfoliosContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n  }\n\n  //use props to connect to redux store. accesses fetchPortfolios which has fetch request to backend.  \n  componentDidMount() {\n    this.props.fetchPortfolios().then(x => {\n      this.setState({\n        loading: false\n      });\n    });\n    console.log(this.props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"max-w-6xl mx-auto mt-16\",\n      children: this.state.loading ? 'loading spinner' : /*#__PURE__*/_jsxDEV(Portfolios, {\n        portfolios: this.state.portfolios\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this) // <div>\n    //     {/* <PortfolioInput /> \n    //     <Portfolios portfolios={this.props.portfolios}/> */}\n    // </div>\n    ;\n  }\n\n} //sending data to store by getting access to props through state \n\n\nconst mapStateToProps = state => {\n  return {\n    portfolios: state.portfolios\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchPortfolios\n})(PortfoliosContainer); //render class container component in app.js","map":{"version":3,"sources":["/Users/johndoe/stocks-app/stocks-frontend/src/containers/PortfolioIndexContainer.js"],"names":["React","Component","Portfolios","connect","fetchPortfolios","PortfoliosContainer","state","loading","componentDidMount","props","then","x","setState","console","log","render","portfolios","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,eAAR,QAA8B,4BAA9B;;;AAEA,MAAMC,mBAAN,SAAkCJ,SAAlC,CAA4C;AAAA;AAAA;AAAA,SACxCK,KADwC,GAChC;AACJC,MAAAA,OAAO,EAAE;AADL,KADgC;AAAA;;AAKxC;AACAC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWL,eAAX,GACCM,IADD,CACOC,CAAC,IAAI;AACR,WAAKC,QAAL,CAAc;AACVL,QAAAA,OAAO,EAAE;AADC,OAAd;AAGH,KALD;AAMAM,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAjB;AACC;;AAELM,EAAAA,MAAM,GAAG;AACL,wBACI;AAAS,MAAA,SAAS,EAAC,yBAAnB;AAAA,gBACK,KAAKT,KAAL,CAAWC,OAAX,GACG,iBADH,gBAEG,QAAC,UAAD;AAAY,QAAA,UAAU,EAAE,KAAKD,KAAL,CAAWU;AAAnC;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ,CAMI;AACA;AACA;AACA;AATJ;AAWH;;AA5BuC,C,CA+B5C;;;AACA,MAAMC,eAAe,GAAGX,KAAK,IAAI;AAC7B,SAAO;AACHU,IAAAA,UAAU,EAAEV,KAAK,CAACU;AADf,GAAP;AAGH,CAJD;;AAMA,eAAeb,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA4CC,mBAA5C,CAAf,C,CACA","sourcesContent":["import React, { Component } from 'react';\nimport Portfolios from '../components/Portfolios';\n// import PortfolioInput from '../components/PortfolioInput';\nimport {connect} from 'react-redux';\nimport {fetchPortfolios} from '../actions/fetchPortfolios';\n\nclass PortfoliosContainer extends Component {\n    state = {\n        loading: true\n    }\n\n    //use props to connect to redux store. accesses fetchPortfolios which has fetch request to backend.  \n    componentDidMount() {\n        this.props.fetchPortfolios()\n        .then( x => {\n            this.setState({\n                loading: false\n            }      )\n        })\n        console.log(this.props)\n        }   \n\n    render() {\n        return (\n            <section className=\"max-w-6xl mx-auto mt-16\">\n                {this.state.loading\n                ? ( 'loading spinner' )\n                : ( <Portfolios portfolios={this.state.portfolios} /> )}\n            </section>\n            // <div>\n            //     {/* <PortfolioInput /> \n            //     <Portfolios portfolios={this.props.portfolios}/> */}\n            // </div>\n        )\n    }\n}\n\n//sending data to store by getting access to props through state \nconst mapStateToProps = state => {\n    return {\n        portfolios: state.portfolios\n    }\n}\n\nexport default connect(mapStateToProps, {fetchPortfolios})(PortfoliosContainer)\n//render class container component in app.js"]},"metadata":{},"sourceType":"module"}