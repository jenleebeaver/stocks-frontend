{"ast":null,"code":"var _jsxFileName = \"/Users/johndoe/stocks-app/stocks-frontend/src/App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'; //curly braces are used when we don't have export default \n\nimport { fetchPortfolios } from './actions/fetchPortfolios';\nimport PortfoliosContainer from './containers/PortfoliosContainer';\nimport StocksContainer from './containers/StocksContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  // **testing access to fetch request \n  // componentDidMount() {\n  // //here we would put a fetch request, but moved to actions/fetchPortfolios and are using fetchPortfolios as a prop\n  // //passing in arg of action object\n  // //testing fetchPortfolios\n  // //this.props.fetchPortfolios({type: 'FETCH_PORTFOLIOS', payload: {s: '', p: '', updated_at: ''}})\n  // }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Router, {\n        children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            classa: true,\n            activeClassName: \"text-purple-300\",\n            exact: true,\n            to: \"/\",\n            children: \"Portfolios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Switch, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: \"Portfolios\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/portfolios/new\",\n            children: \"New Portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StocksContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n} //updates redux store\n\n\nconst mapStateToProps = state => {\n  return {\n    portfolios: state.portfolios\n  };\n}; //can add mapDispatchToProps, but {fetchPortfolios} works the same. Sending data to store to act as props. \n\n\nexport default connect(mapStateToProps, {\n  fetchPortfolios\n})(App);","map":{"version":3,"sources":["/Users/johndoe/stocks-app/stocks-frontend/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","NavLink","connect","fetchPortfolios","PortfoliosContainer","StocksContainer","App","render","mapStateToProps","state","portfolios"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,OAJF,QAKO,kBALP;AAMA,SAAQC,OAAR,QAAsB,aAAtB,C,CACA;;AACA,SAAQC,eAAR,QAA8B,2BAA9B;AACA,OAAOC,mBAAP,MAAgC,kCAAhC;AACA,OAAOC,eAAP,MAA4B,8BAA5B;;;AAEA,MAAMC,GAAN,SAAkBV,SAAlB,CAA4B;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEAW,EAAAA,MAAM,GAAE;AACN,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI,QAAC,MAAD;AAAA,gCACC;AAAA,iCACE,QAAC,OAAD;AACC,YAAA,MAAM,MADP;AAEC,YAAA,eAAe,EAAC,iBAFjB;AAGC,YAAA,KAAK,MAHN;AAGO,YAAA,EAAE,EAAC,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADD,eASA,QAAC,MAAD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,KAAK,MAAZ;AAAa,YAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIG,QAAC,KAAD;AAAO,YAAA,IAAI,EAAC,iBAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJH;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAmBE;AAAQ,QAAA,SAAS,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,cAnBF,eAuBE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA2BD;;AAtCyB,C,CAyC5B;;;AACA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,UAAU,EAAED,KAAK,CAACC;AADb,GAAP;AAGD,CAJD,C,CAMA;;;AACA,eAAeR,OAAO,CAACM,eAAD,EAAkB;AAACL,EAAAA;AAAD,CAAlB,CAAP,CAA4CG,GAA5C,CAAf","sourcesContent":["import './App.css';\nimport React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from 'react-router-dom';\nimport {connect} from 'react-redux';\n//curly braces are used when we don't have export default \nimport {fetchPortfolios} from './actions/fetchPortfolios';\nimport PortfoliosContainer from './containers/PortfoliosContainer';\nimport StocksContainer from './containers/StocksContainer';\n\nclass App extends Component {\n\n  // **testing access to fetch request \n  // componentDidMount() {\n  // //here we would put a fetch request, but moved to actions/fetchPortfolios and are using fetchPortfolios as a prop\n  // //passing in arg of action object\n  // //testing fetchPortfolios\n  // //this.props.fetchPortfolios({type: 'FETCH_PORTFOLIOS', payload: {s: '', p: '', updated_at: ''}})\n  // }\n\n  render(){\n    return (\n      <div className=\"App\">\n          <Router>\n           <nav>\n             <NavLink \n              classa\n              activeClassName=\"text-purple-300\"\n              exact to=\"/\">\n               Portfolios\n            </NavLink>\n           </nav>\n          <Switch>\n            <Route exact path=\"/\">\n              Portfolios\n            </Route>\n             <Route path=\"/portfolios/new\">\n              New Portfolio\n            </Route> \n           </Switch>\n        </Router>  \n        <header className=\"App-header\">\n          {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n        </header>\n        {/* <PortfoliosContainer /> */}\n        <StocksContainer />\n      </div>\n    );\n  }\n}\n\n//updates redux store\nconst mapStateToProps = (state) => {\n  return {\n    portfolios: state.portfolios\n  }\n}\n\n//can add mapDispatchToProps, but {fetchPortfolios} works the same. Sending data to store to act as props. \nexport default connect(mapStateToProps, {fetchPortfolios})(App);\n"]},"metadata":{},"sourceType":"module"}